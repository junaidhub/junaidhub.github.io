🧠 Git Commands Explained – From Basic to Advanced
Git is a version control system that helps you track changes in your code and collaborate with others. If you're learning Git, here's a simple guide to all the important commands and what they do.

🔰 1. Getting Started with Git
👉 Set your name and email (only once)
bash
Copy
Edit
git config --global user.name "Your Name"
git config --global user.email "you@example.com"
This tells Git who you are. It saves your name and email with each commit.

📁 2. Starting or Downloading a Project
👉 Start a new project (repository)
bash
Copy
Edit
git init
This creates a hidden .git folder and starts tracking files.

👉 Clone a project from GitHub
bash
Copy
Edit
git clone https://github.com/user/project.git
This downloads a copy of someone’s project to your computer.

✍️ 3. Track and Save Changes
👉 Check the status of your files
bash
Copy
Edit
git status
Shows which files are new, modified, or staged.

👉 Stage your changes
bash
Copy
Edit
git add filename.txt     # Adds one file
git add .                # Adds all changed files
Tells Git what changes you want to include in the next save (commit).

👉 Commit your changes (save them)
bash
Copy
Edit
git commit -m "Write a short message here"
This saves your changes and attaches a message explaining what you did.

🔁 4. Working with Branches
Branches are like different versions of your project.

👉 See all branches
bash
Copy
Edit
git branch
👉 Create a new branch
bash
Copy
Edit
git branch new-feature
👉 Switch to another branch
bash
Copy
Edit
git checkout new-feature
👉 Create and switch in one step
bash
Copy
Edit
git checkout -b new-feature
👉 Merge a branch
bash
Copy
Edit
git merge new-feature
Merges changes from one branch into the current one.

👉 Delete a branch
bash
Copy
Edit
git branch -d new-feature
🌐 5. Work with Remote Repositories (GitHub)
👉 Add a remote link (GitHub)
bash
Copy
Edit
git remote add origin https://github.com/user/repo.git
👉 Push your code to GitHub
bash
Copy
Edit
git push origin main     # or master
👉 Pull latest changes from GitHub
bash
Copy
Edit
git pull
👉 Fetch changes without applying
bash
Copy
Edit
git fetch
📜 6. See What Happened
👉 See the commit history
bash
Copy
Edit
git log
git log --oneline         # Short version
git log --graph           # Visual tree
👉 See what changed
bash
Copy
Edit
git diff                  # Changes not staged
git diff --staged         # Changes staged for commit
👉 See who changed a file
bash
Copy
Edit
git blame filename.txt
🔄 7. Undo Things
👉 Unstage a file
bash
Copy
Edit
git reset filename.txt
👉 Discard changes in a file
bash
Copy
Edit
git checkout -- filename.txt
👉 Undo the last commit (keep changes)
bash
Copy
Edit
git reset --soft HEAD~1
👉 Undo everything (dangerous)
bash
Copy
Edit
git reset --hard
🏷️ 8. Tags – Mark Important Points
👉 Create a tag
bash
Copy
Edit
git tag v1.0
👉 Push tag to GitHub
bash
Copy
Edit
git push origin v1.0
👉 Push all tags
bash
Copy
Edit
git push --tags
📦 9. Stash – Save Temporary Changes
👉 Save your work temporarily
bash
Copy
Edit
git stash
👉 See your stashes
bash
Copy
Edit
git stash list
👉 Apply a stash back
bash
Copy
Edit
git stash apply
🚀 10. Advanced Git
🔹 Rebase (Rewrites history)
bash
Copy
Edit
git rebase branch-name
🔹 Cherry-pick (Pick one commit)
bash
Copy
Edit
git cherry-pick commit_id
🔹 Amend a commit
bash
Copy
Edit
git commit --amend
🔹 Git bisect (Find the bad commit)
bash
Copy
Edit
git bisect start
git bisect good <commit>
git bisect bad
git bisect reset
🧩 11. Git Submodules
Submodules let you include another Git repo inside your repo.

bash
Copy
Edit
git submodule add https://github.com/other/project.git foldername
git submodule update --init
🧙 12. Git Aliases (Shortcuts)
Tired of long commands? Make shortcuts!

bash
Copy
Edit
git config --global alias.co checkout
git config --global alias.br branch
git config --global alias.cm "commit -m"
Now you can just type git co, git br, etc.

📄 13. Ignore Files
You can tell Git to ignore files like logs or cache:
Create a .gitignore file:

bash
Copy
Edit
*.log
__pycache__/
node_modules/
✅ Final Tip
To learn more about any command:

bash
Copy
Edit
git <command> --help